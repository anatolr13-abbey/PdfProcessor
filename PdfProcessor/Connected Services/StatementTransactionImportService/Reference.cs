//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abbey.PdfProcessor.StatementTransactionImportService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportedStatementTransaction", Namespace="http://www.outsystems.com")]
    [System.SerializableAttribute()]
    public partial class ImportedStatementTransaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long IdField;
        
        private System.DateTime ImportDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarrierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        private string PolicyEffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgentNameField;
        
        private string TransactionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommissionTypeField;
        
        private decimal PremiumValueField;
        
        private decimal SplitPercentField;
        
        private decimal RatePercentField;
        
        private decimal CommissionEarnedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime ImportDate {
            get {
                return this.ImportDateField;
            }
            set {
                if ((this.ImportDateField.Equals(value) != true)) {
                    this.ImportDateField = value;
                    this.RaisePropertyChanged("ImportDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string CarrierName {
            get {
                return this.CarrierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierNameField, value) != true)) {
                    this.CarrierNameField = value;
                    this.RaisePropertyChanged("CarrierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string AgencyName {
            get {
                return this.AgencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyNameField, value) != true)) {
                    this.AgencyNameField = value;
                    this.RaisePropertyChanged("AgencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Period {
            get {
                return this.PeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodField, value) != true)) {
                    this.PeriodField = value;
                    this.RaisePropertyChanged("Period");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string Insured {
            get {
                return this.InsuredField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuredField, value) != true)) {
                    this.InsuredField = value;
                    this.RaisePropertyChanged("Insured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=9)]
        public string PolicyEffectiveDate {
            get {
                return this.PolicyEffectiveDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyEffectiveDateField, value) != true)) {
                    this.PolicyEffectiveDateField = value;
                    this.RaisePropertyChanged("PolicyEffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string AgentName {
            get {
                return this.AgentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentNameField, value) != true)) {
                    this.AgentNameField = value;
                    this.RaisePropertyChanged("AgentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=11)]
        public string TransactionDate {
            get {
                return this.TransactionDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionDateField, value) != true)) {
                    this.TransactionDateField = value;
                    this.RaisePropertyChanged("TransactionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string TransactionType {
            get {
                return this.TransactionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionTypeField, value) != true)) {
                    this.TransactionTypeField = value;
                    this.RaisePropertyChanged("TransactionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string CommissionType {
            get {
                return this.CommissionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CommissionTypeField, value) != true)) {
                    this.CommissionTypeField = value;
                    this.RaisePropertyChanged("CommissionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public decimal PremiumValue {
            get {
                return this.PremiumValueField;
            }
            set {
                if ((this.PremiumValueField.Equals(value) != true)) {
                    this.PremiumValueField = value;
                    this.RaisePropertyChanged("PremiumValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=15)]
        public decimal SplitPercent {
            get {
                return this.SplitPercentField;
            }
            set {
                if ((this.SplitPercentField.Equals(value) != true)) {
                    this.SplitPercentField = value;
                    this.RaisePropertyChanged("SplitPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=16)]
        public decimal RatePercent {
            get {
                return this.RatePercentField;
            }
            set {
                if ((this.RatePercentField.Equals(value) != true)) {
                    this.RatePercentField = value;
                    this.RaisePropertyChanged("RatePercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=17)]
        public decimal CommissionEarned {
            get {
                return this.CommissionEarnedField;
            }
            set {
                if ((this.CommissionEarnedField.Equals(value) != true)) {
                    this.CommissionEarnedField = value;
                    this.RaisePropertyChanged("CommissionEarned");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://CommissionPortalRepository/StatementTransactionImportService/", ConfigurationName="StatementTransactionImportService.StatementTransactionImportServiceSoap")]
    public interface StatementTransactionImportServiceSoap {
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://www.outsystems.com) of message ImportRequest does not match the default value (http://CommissionPortalRepository/StatementTransactionImportService/)
        [System.ServiceModel.OperationContractAttribute(Action="http://CommissionPortalRepository/StatementTransactionImportService/Import", ReplyAction="*")]
        Abbey.PdfProcessor.StatementTransactionImportService.ImportResponse Import(Abbey.PdfProcessor.StatementTransactionImportService.ImportRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CommissionPortalRepository/StatementTransactionImportService/Import", ReplyAction="*")]
        System.Threading.Tasks.Task<Abbey.PdfProcessor.StatementTransactionImportService.ImportResponse> ImportAsync(Abbey.PdfProcessor.StatementTransactionImportService.ImportRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Import", WrapperNamespace="http://www.outsystems.com", IsWrapped=true)]
    public partial class ImportRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.outsystems.com", Order=0)]
        public bool WipeDatabase;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.outsystems.com", Order=1)]
        public Abbey.PdfProcessor.StatementTransactionImportService.ImportedStatementTransaction ImportedStatementTransaction;
        
        public ImportRequest() {
        }
        
        public ImportRequest(bool WipeDatabase, Abbey.PdfProcessor.StatementTransactionImportService.ImportedStatementTransaction ImportedStatementTransaction) {
            this.WipeDatabase = WipeDatabase;
            this.ImportedStatementTransaction = ImportedStatementTransaction;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImportResponse", WrapperNamespace="http://www.outsystems.com", IsWrapped=true)]
    public partial class ImportResponse {
        
        public ImportResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface StatementTransactionImportServiceSoapChannel : Abbey.PdfProcessor.StatementTransactionImportService.StatementTransactionImportServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StatementTransactionImportServiceSoapClient : System.ServiceModel.ClientBase<Abbey.PdfProcessor.StatementTransactionImportService.StatementTransactionImportServiceSoap>, Abbey.PdfProcessor.StatementTransactionImportService.StatementTransactionImportServiceSoap {
        
        public StatementTransactionImportServiceSoapClient() {
        }
        
        public StatementTransactionImportServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StatementTransactionImportServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatementTransactionImportServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatementTransactionImportServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Abbey.PdfProcessor.StatementTransactionImportService.ImportResponse Abbey.PdfProcessor.StatementTransactionImportService.StatementTransactionImportServiceSoap.Import(Abbey.PdfProcessor.StatementTransactionImportService.ImportRequest request) {
            return base.Channel.Import(request);
        }
        
        public void Import(bool WipeDatabase, Abbey.PdfProcessor.StatementTransactionImportService.ImportedStatementTransaction ImportedStatementTransaction) {
            Abbey.PdfProcessor.StatementTransactionImportService.ImportRequest inValue = new Abbey.PdfProcessor.StatementTransactionImportService.ImportRequest();
            inValue.WipeDatabase = WipeDatabase;
            inValue.ImportedStatementTransaction = ImportedStatementTransaction;
            Abbey.PdfProcessor.StatementTransactionImportService.ImportResponse retVal = ((Abbey.PdfProcessor.StatementTransactionImportService.StatementTransactionImportServiceSoap)(this)).Import(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Abbey.PdfProcessor.StatementTransactionImportService.ImportResponse> Abbey.PdfProcessor.StatementTransactionImportService.StatementTransactionImportServiceSoap.ImportAsync(Abbey.PdfProcessor.StatementTransactionImportService.ImportRequest request) {
            return base.Channel.ImportAsync(request);
        }
        
        public System.Threading.Tasks.Task<Abbey.PdfProcessor.StatementTransactionImportService.ImportResponse> ImportAsync(bool WipeDatabase, Abbey.PdfProcessor.StatementTransactionImportService.ImportedStatementTransaction ImportedStatementTransaction) {
            Abbey.PdfProcessor.StatementTransactionImportService.ImportRequest inValue = new Abbey.PdfProcessor.StatementTransactionImportService.ImportRequest();
            inValue.WipeDatabase = WipeDatabase;
            inValue.ImportedStatementTransaction = ImportedStatementTransaction;
            return ((Abbey.PdfProcessor.StatementTransactionImportService.StatementTransactionImportServiceSoap)(this)).ImportAsync(inValue);
        }
    }
}
